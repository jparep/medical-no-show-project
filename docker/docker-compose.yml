version: '3.8'

services:
  db:
    image: postgres:17
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432" # Expose PostgreSQL on the default port
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persistent volume for database data
      - ./docker/pg-init-scripts:/docker-entrypoint-initdb.d # Scripts for schema and initial data
    networks:
      - medical-no-show-network
    healthcheck: # Healthcheck to ensure PostgreSQL is ready
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80" # Expose pgAdmin on port 8080
    depends_on:
      db:
        condition: service_healthy # Wait until the database is healthy
    networks:
      - medical-no-show-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin # Persistent volume for pgAdmin configuration

networks:
  medical-no-show-network:
    driver: bridge # Default network driver for service isolation

volumes:
  postgres-data: # Persistent storage for PostgreSQL
  pgadmin-data: # Persistent storage for pgAdmin
